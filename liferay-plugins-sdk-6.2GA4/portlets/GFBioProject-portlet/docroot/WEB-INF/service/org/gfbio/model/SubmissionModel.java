/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.gfbio.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Submission service. Represents a row in the &quot;gfbio_Submission&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link org.gfbio.model.impl.SubmissionModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link org.gfbio.model.impl.SubmissionImpl}.
 * </p>
 *
 * @author Marcel Froemming
 * @see Submission
 * @see org.gfbio.model.impl.SubmissionImpl
 * @see org.gfbio.model.impl.SubmissionModelImpl
 * @generated
 */
public interface SubmissionModel extends BaseModel<Submission> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a submission model instance should use the {@link Submission} interface instead.
	 */

	/**
	 * Returns the primary key of this submission.
	 *
	 * @return the primary key of this submission
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this submission.
	 *
	 * @param primaryKey the primary key of this submission
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the submission i d of this submission.
	 *
	 * @return the submission i d of this submission
	 */
	public long getSubmissionID();

	/**
	 * Sets the submission i d of this submission.
	 *
	 * @param submissionID the submission i d of this submission
	 */
	public void setSubmissionID(long submissionID);

	/**
	 * Returns the research object i d of this submission.
	 *
	 * @return the research object i d of this submission
	 */
	public long getResearchObjectID();

	/**
	 * Sets the research object i d of this submission.
	 *
	 * @param researchObjectID the research object i d of this submission
	 */
	public void setResearchObjectID(long researchObjectID);

	/**
	 * Returns the research object version of this submission.
	 *
	 * @return the research object version of this submission
	 */
	public long getResearchObjectVersion();

	/**
	 * Sets the research object version of this submission.
	 *
	 * @param researchObjectVersion the research object version of this submission
	 */
	public void setResearchObjectVersion(long researchObjectVersion);

	/**
	 * Returns the archive of this submission.
	 *
	 * @return the archive of this submission
	 */
	@AutoEscape
	public String getArchive();

	/**
	 * Sets the archive of this submission.
	 *
	 * @param archive the archive of this submission
	 */
	public void setArchive(String archive);

	/**
	 * Returns the broker submission i d of this submission.
	 *
	 * @return the broker submission i d of this submission
	 */
	@AutoEscape
	public String getBrokerSubmissionID();

	/**
	 * Sets the broker submission i d of this submission.
	 *
	 * @param brokerSubmissionID the broker submission i d of this submission
	 */
	public void setBrokerSubmissionID(String brokerSubmissionID);

	/**
	 * Returns the archive p i d of this submission.
	 *
	 * @return the archive p i d of this submission
	 */
	@AutoEscape
	public String getArchivePID();

	/**
	 * Sets the archive p i d of this submission.
	 *
	 * @param archivePID the archive p i d of this submission
	 */
	public void setArchivePID(String archivePID);

	/**
	 * Returns the archive p i d type of this submission.
	 *
	 * @return the archive p i d type of this submission
	 */
	public long getArchivePIDType();

	/**
	 * Sets the archive p i d type of this submission.
	 *
	 * @param archivePIDType the archive p i d type of this submission
	 */
	public void setArchivePIDType(long archivePIDType);

	/**
	 * Returns the last changed of this submission.
	 *
	 * @return the last changed of this submission
	 */
	public Date getLastChanged();

	/**
	 * Sets the last changed of this submission.
	 *
	 * @param lastChanged the last changed of this submission
	 */
	public void setLastChanged(Date lastChanged);

	/**
	 * Returns the user i d of this submission.
	 *
	 * @return the user i d of this submission
	 */
	public long getUserID();

	/**
	 * Sets the user i d of this submission.
	 *
	 * @param userID the user i d of this submission
	 */
	public void setUserID(long userID);

	/**
	 * Returns the is public of this submission.
	 *
	 * @return the is public of this submission
	 */
	public boolean getIsPublic();

	/**
	 * Returns <code>true</code> if this submission is is public.
	 *
	 * @return <code>true</code> if this submission is is public; <code>false</code> otherwise
	 */
	public boolean isIsPublic();

	/**
	 * Sets whether this submission is is public.
	 *
	 * @param isPublic the is public of this submission
	 */
	public void setIsPublic(boolean isPublic);

	/**
	 * Returns the public after of this submission.
	 *
	 * @return the public after of this submission
	 */
	public Date getPublicAfter();

	/**
	 * Sets the public after of this submission.
	 *
	 * @param publicAfter the public after of this submission
	 */
	public void setPublicAfter(Date publicAfter);

	/**
	 * Returns the status of this submission.
	 *
	 * @return the status of this submission
	 */
	@AutoEscape
	public String getStatus();

	/**
	 * Sets the status of this submission.
	 *
	 * @param status the status of this submission
	 */
	public void setStatus(String status);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(org.gfbio.model.Submission submission);

	@Override
	public int hashCode();

	@Override
	public CacheModel<org.gfbio.model.Submission> toCacheModel();

	@Override
	public org.gfbio.model.Submission toEscapedModel();

	@Override
	public org.gfbio.model.Submission toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}