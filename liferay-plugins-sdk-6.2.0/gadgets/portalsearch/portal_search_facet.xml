<?xml version="1.0" encoding="UTF-8"?>
<Module>
	<ModulePrefs title="Search Facet" author="gfbiodev"
		author_email="dev@gfbio.org" >
		<Require feature="pubsub-2">
			<Param name="topics">
				<Topic title="GFBio Search Facet" name="gfbio.search.facet" subscribe="true" publish="true"/>

			</Param>
		</Require>
		<Require feature="dynamic-height"/>
	</ModulePrefs>
	<Content type="html">
		<![CDATA[
	<!DOCTYPE html>
		<html style="height: 100%;">
			<head  lang="en">
				<meta charset="UTF-8">
				<title>GFBio Search Facet</title>
				<script src="http://gfbio-dev1.inf-bb.uni-jena.de/gfbio/search/js/jquery-1.10.2.js"	type="text/javascript"></script>
				<script src="http://gfbio-dev1.inf-bb.uni-jena.de/gfbio/search/js/jquery-1.10.2-ui.js"	type="text/javascript"></script>
				<script src="http://gfbio-dev1.inf-bb.uni-jena.de/gfbio/search/js/jquery.bonsai.js"	type="text/javascript"></script>
				<script src="http://gfbio-dev1.inf-bb.uni-jena.de/gfbio/search/js/tag-it.js" type="text/javascript" charset="utf-8"></script>
				<link rel="stylesheet"	href="http://gfbio-dev1.inf-bb.uni-jena.de/gfbio/search/css/jquery.bonsai.css" />
				<link rel="stylesheet"	href="http://gfbio-dev1.inf-bb.uni-jena.de/gfbio/search/css/search.css" />
				<link rel="stylesheet" type="text/css" href="http://ajax.googleapis.com/ajax/libs/jqueryui/1/themes/flick/jquery-ui.css">
				<link rel="stylesheet" type="text/css" href="http://gfbio-dev1.inf-bb.uni-jena.de/gfbio/search/css/jquery.tagit.css">
				<link rel="stylesheet" type="text/css" href="http://gfbio-dev1.inf-bb.uni-jena.de/gfbio/search/css/jquery-ui.css">
				
				<script type="text/javascript">
				
					gadgets.HubSettings.onConnect = function(hub, suc, err) {
						gadgets.Hub.subscribe("gfbio.search.facet", refreshFacet);
						gadgets.Hub.subscribe("gfbio.search.facetreset", resetFacet);
					};

					var facetData;
					var maxYear=(new Date()).getFullYear();
					var minYear=maxYear;
					var maxFilteredYear;
					var minFilteredYear;
					$(document).ready(function() { 
						var facetTags = $('#facetTags');
						facetTags.tagit({
							afterTagRemoved: function(evt, ui) {
								var tagName = facetTags.tagit('tagLabel', ui.tag);
								console.log(':Facet: afterTagRemoved: ' + tagName);
								// remove term from facet basket
								removeFromFacetBasket(tagName);
								fireFacetData();
							},
						});
						$(document.getElementById('facetTags').getElementsByClassName('ui-widget-content')).attr("readOnly","true");
						appendDivAfteriFrame();

					});

					function createYearSlider() {
						$( "#slider-range" ).slider({
						  range: true,
						  min: minYear,
						  max: maxYear,
						  values: [ minFilteredYear, maxFilteredYear ],
						  change: function( event, ui ) {
							var min = ui.values[0];
							var max = ui.values[1];
							$( "#amount" ).val(min + " - " + max);
							//TODO: remove previous range filter
							removeByFacetCatBasket("citation.yearFacet");
							addToFacetBasket("citation.yearFacet", min + " - " + max);
						  }
						});
						$( "#amount" ).val( $( "#slider-range" ).slider( "values", 0 ) +
						   " - " + $( "#slider-range" ).slider("values", 1) );
					}
					
					function appendDivAfteriFrame() {
						 var iFrame = window.parent.document.getElementById(window.frameElement.id)
						 
						 var newDivInParent = window.parent.document.createElement('div');
						 newDivInParent.setAttribute("id", "dialogFacet");
						 newDivInParent.setAttribute("title", "More Facet Terms");
						 newDivInParent.setAttribute("class", "robotofont");
						 
						 iFrame.parentNode.appendChild(newDivInParent);  
						
						 var displayHTML = "<input id='dialogFacetTerm' type='hidden'></input>";
						 displayHTML += "<input id='dialogFacetCat' type='hidden'></input>";
    					var dialogDiv = parent.document.getElementById("dialogFacet");
    					dialogDiv.innerHTML = displayHTML;
						
						dialog = window.parent.$('#dialogFacet').dialog({
									autoOpen: false,
									height: 300,
									width: 350,
									modal: true,
									buttons: {
										"Add to filter": function(){
											//var allVals = [];
											var category = "";
											window.parent.$('#dialogFacet :checkbox:checked').each(function() {
											   //allVals.push($(this).val());
											   var checkedVal = $(this).val();
											   var split = checkedVal.indexOf(':');
											   category = checkedVal.substring(0,split);
											   var value = checkedVal.substring(split+1);
											   addToFacetBasket(category, value);
											});
											//console.log(allVals);
											dialog.dialog( "close" );
										},
										Cancel: function() {
											dialog.dialog( "close" );
										}
									},
									close: function() {
										//form[ 0 ].reset();
										//allFields.removeClass( "ui-state-error" );
										var dialogFacetCat = window.parent.document.getElementById("dialogFacetCat").value;
										var dialogFacetTerm = window.parent.document.getElementById("dialogFacetTerm").value;
										if (dialogFacetTerm != "")addToFacetBasket(dialogFacetCat, dialogFacetTerm);
									}
									
						});         
					}

					function showMoreFacet(catName,field){
						var facetList = facetData[field].buckets;
					    var displayHTML = "<input id='dialogFacetTerm' type='hidden'></input>";
						 displayHTML += "<input id='dialogFacetCat' type='hidden'></input>";
						for (var i = 0, iLen = facetList.length; i < iLen ; i++) {
					        var facetTerm = facetList[i].key;
					        var facetCount = facetList[i].doc_count;
							if (field == "dataCenter"){
								displayHTML += "<input type='checkbox' style='vertical-align:bottom; margin: 0px 4px 3px 0px;' value='"
											+catName+":"+facetTerm+"'>"+facetTerm
											+"<font style='font-style:italic'> ("
											+facetCount+")</font></br>";
							}
							else {
								displayHTML += "<a href='#' onclick='document.getElementById(\"dialogFacetCat\").value=\""
											+catName+"\";document.getElementById(\"dialogFacetTerm\").value=\""+facetTerm
											+"\";$(\"#dialogFacet\").dialog(\"close\");'>"+facetTerm+"</a>"
											+"<font style='font-style:italic'> ("
											+facetCount+")</font></br>";
											 
							}
						}
    					var dialogDiv = parent.document.getElementById("dialogFacet");
    					dialogDiv.innerHTML = displayHTML;
						
						window.parent.$('#dialogFacet').dialog("open");
					}

					function createFacetDialog(catName,field){
						return "<a href='#' onclick='showMoreFacet(\""
								+catName+"\",\""+field+"\");return false;'>More...</a>";
					}

					function setMinMaxYear(facetArray){
						minFilteredYear=0;
						maxFilteredYear=0;
						for (var i = 0, iLen = facetArray.length; i < iLen ; i++) {
							var key = facetArray[i].key;
							if (i == 0) {
								minFilteredYear = key;
								maxFilteredYear = key;
							}	else{
								if (key < minYear){ minYear = key;}
								if (key > maxYear){ maxYear = key;}
								if (key < minFilteredYear){ minFilteredYear = key;}
								if (key > maxFilteredYear){ maxFilteredYear = key;}
							}
						}
					}
					function writeYearSlider(catName,facetArray,fieldName){
						setMinMaxYear(facetArray);
						return "<p><label for=\"amount\">Publication Year(s):</label>"
									+"<input type=\"text\" id=\"amount\" readonly "
									+"style=\"border:0; color:#f6931f; font-weight:bold; margin-left: 30px;\"></p>"
									+"<div id=\"slider-range\" style=\"margin-left: 30px; margin-right: 30px;\"></div>"
									+"<p style=\"margin-left: 35px;\">"+createFacetDialog(catName,fieldName)+"</p>";
					}
					
					function writeListFacet(catName, displayName, facetArray, fieldName){
						var displayHTML = "";
						if (facetArray.length > 0){
							if (fieldName == "year") displayHTML += writeYearSlider(catName,facetArray,fieldName)
							else {
							displayHTML += "<li data-value='"+catName+"'>"+displayName+"<ol>";
							for (var i = 0, iLen = facetArray.length; i < iLen ; i++) {
								var key = facetArray[i].key;
								var ncount = facetArray[i].doc_count;
								if ((i <5)&&(fieldName != "year")) {displayHTML += createFacetList(key,catName,ncount);}
								else if (i==5){
									displayHTML += "<li data-value='more'>"
											+createFacetDialog(catName,fieldName)
											+"</li>";
								}else i = iLen;
								
							}					    
							displayHTML += "</ol></li>";
							}
						}
						return displayHTML;
					}

					function refreshFacet(topic, data, subscriberData) {
						console.log(':Facet: refresh facet basket');
						console.log(data);
						facetData = data;
					    var displayHTML = "";
						if (data != ""){
							var authorFacet = data.author.buckets;
							var yearFacet = data.year.buckets;
							var regionFacet = data.region.buckets;
							var dataCenterFacet = data.dataCenter.buckets;

							displayHTML += "<ol id='facet-tree'>";
							
							displayHTML += writeListFacet('citation.authorFacet', 'Author', authorFacet, 'author');

							displayHTML += writeListFacet('citation.yearFacet', 'Publication Year', yearFacet, 'year');

							displayHTML += writeListFacet('regionFacet', 'Geographical Region', regionFacet, 'region');

							displayHTML += writeListFacet('dataCenterFacet', 'Data Center', dataCenterFacet, 'dataCenter');

							displayHTML += "</ol>";							
						}
						console.log(displayHTML);
    					var facetfield = document.getElementById("search_facet_tree");
    					facetfield.innerHTML = displayHTML;
						$('#facet-tree').bonsai({expandAll: true})
						.click(function() {
							adjust();
						});
						$("#facetDiv").removeClass("invisible");
						createYearSlider();
                    				adjust();
					};	
					function createFacetList(dataVal,cat,count){
						return "<li data-value='"+dataVal+"'><a href='#' onclick='addToFacetBasket(\""+
								cat+"\",\""+dataVal+"\");return false;'>"+dataVal+"</a><font style='font-style:italic'> ("+count+")</font></li>";
					};							

					function resetFacet(topic, data, subscriberData){
						resetFacetBasket();
					}

					//keep this separately to be called as a javascript function
					function resetFacetBasket(){
						console.log(':Facet: reset facet basket');
						var basket = document.getElementById("facetBasket");
						var jsonData = {};
						jsonData.filtered = [];
						basket.value = JSON.stringify(jsonData);
						$("#facetTags").tagit('removeAll');
					}
					function addToFacetBasket(filterCat, filterTerm){
						// add filterTerm to facetBasket
						var basket = document.getElementById("facetBasket");
						var basketStr = basket.value;
						var jsonData = {};
						var filtered = [];
						// add to basket
						if (basketStr=="") {
							jsonData.filtered = filtered;
						}else {
							jsonData = JSON.parse(basketStr);
						}
						// check if the facet is already selected, if not, then add
						var isExist = isInJSON(jsonData.filtered,"facetTerm",filterTerm);
						if (isExist==0){
							var jsonArr = {"facetCat":	filterCat,
										"facetTerm": filterTerm};
							jsonData.filtered.push(jsonArr);
							basket.value = JSON.stringify(jsonData);
							$("#facetTags").tagit('createTag',filterTerm);
							fireFacetData();
						}
					};
					
					function fireFacetData(){
						var jsonData = getFacetBasketJSON();
						console.log(':Facet: fire facet basket data: '+JSON.stringify(jsonData));
					    gadgets.Hub.publish('gfbio.search.facetfilter', jsonData);
					}

					function removeFromFacetBasket(filterTerm){
						var basket = document.getElementById("facetBasket");
						var basketStr = basket.value;
						if (basketStr!="") {
							jsonData = JSON.parse(basketStr);
							jsonData.filtered = JSONfindAndRemove(jsonData.filtered,'facetTerm',filterTerm);
							basket.value = JSON.stringify(jsonData);
						}
					}


					function removeByFacetCatBasket(filterCat){
						var basket = document.getElementById("facetBasket");
						var basketStr = basket.value;
						if (basketStr!="") {
							jsonData = JSON.parse(basketStr);
							jsonData.filtered = JSONfindAndRemoveWithTagRemove(jsonData.filtered,'facetCat',filterCat);
							basket.value = JSON.stringify(jsonData);
						}
					}

					function isInJSON(array, property, value) {
						var isExist = false;
					  $.each(array, function(index, result) {
						  if (result[property] == value) {
								isExist = true;
						  };
						});
						return isExist;
					};


				function JSONfindAndRemove(array, property, value) {
					var resultArray = [];
					   $.each(array, function(index, result) {
						  if (result[property] == value) {
							  // Remove from array is not working I don't know why,
							  // just do it another way round
			  
							  // -----------------------------------------
							  // When the removed tag is a year range, then reset the slider
							  var tagLabel = result[property];
							  var first = tagLabel.substring(0,4);
							  var last = tagLabel.substring(7,4);
							  console.log(first);
							  console.log(last);
							  if (isNumeric(first) && isNumeric(last) && (tagLabel.indexOf(' - ') ==4)){
								$("#facetTags").tagit("removeTagByLabel", tagLabel);
								var minYear = getMinYear(yearFacet);
								var maxYear = getMaxYear(yearFacet);
								var slider = document.getElementById("slider-range");
								slider.slider("option", 'min', minYear*1);
								slider.slider("option", 'max', maxYear*1);
							  }
							  // -----------------------------------------
						  }    else {
							  resultArray.push(result);
						  }
						});
					   return resultArray;
				};

				function JSONfindAndRemoveWithTagRemove(array, property, value) {
					var resultArray = [];
					   $.each(array, function(index, result) {
						  if (result[property] == value) {
							  // Remove from array is not working I don't know why,
							  // just do it another way round
							  console.log('*****************');
							  console.log(result['facetTerm']);
							  console.log('*****************');
							  //var tagLabel = result['facetTerm'];
						  }    
						  else {
							  resultArray.push(result);
						  }
						});
					   return resultArray;
				};
				function getFacetBasketJSON() {
					var jsonData = {};
					var selected = [];
					var basket = document.getElementById("facetBasket");
					var basketStr = basket.value;
					if (basketStr=="") {
						jsonData.selected = selected;
					}else {
						jsonData = JSON.parse(basketStr);
					}

					return jsonData;
				};

					function getMinYear(facetArray){
						var minYear = document.getElementById("minYear").value;
						for (var i = 0, iLen = facetArray.length; i < iLen ; i++) {
							var key = facetArray[i].key;
							if (minYear=="") {
								minYear=key
								document.getElementById("minYear").value = minYear;
							}
							else if (key < minYear){ 
								minYear = key;
								document.getElementById("minYear").value = minYear;
							}
						}
						return minYear;
					}
					function getMaxYear(facetArray){
						var maxYear = document.getElementById("maxYear").value;
						//var maxYear = (new Date()).getFullYear();
						for (var i = 0, iLen = facetArray.length; i < iLen ; i++) {
							var key = facetArray[i].key;
							if (maxYear=="") {
								maxYear=key
								document.getElementById("maxYear").value = maxYear;
							}
							else if (key > maxYear){ 
								maxYear = key;
								document.getElementById("maxYear").value = maxYear;
							}
						}
						return maxYear;
					}

					function isNumeric(n) {
					  return !isNaN(parseFloat(n)) && isFinite(n);
					}
					function adjust() {
					   gadgets.window.adjustHeight();
					   //console.log(':Facet: auto adjust height');
					};
				</script>
			</head>
			<body style="height:100%;">
				<div id="search_facet">
					<div id="facetDiv" class="invisible">Filter Results: 
					<a href='#' onclick='resetFacetBasket();return false;' style='font-size:11px;'>clear filters</a>
					<ul id="facetTags"></ul>
					</div>
					<div id="search_facet_tree">
					</div>
				</div>
				<input id="facetBasket" type="hidden" value=""/>
			</body>
			
		</html>
	]]>

	</Content>
</Module>