/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.gfbio.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.gfbio.model.Head;
import org.gfbio.model.HeadModel;
import org.gfbio.model.HeadSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Head service. Represents a row in the &quot;gfbio_Head&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.gfbio.model.HeadModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link HeadImpl}.
 * </p>
 *
 * @author Felicitas Loeffler
 * @see HeadImpl
 * @see org.gfbio.model.Head
 * @see org.gfbio.model.HeadModel
 * @generated
 */
@JSON(strict = true)
public class HeadModelImpl extends BaseModelImpl<Head> implements HeadModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a head model instance should use the {@link org.gfbio.model.Head} interface instead.
	 */
	public static final String TABLE_NAME = "gfbio_Head";
	public static final Object[][] TABLE_COLUMNS = {
			{ "headID", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "task", Types.VARCHAR },
			{ "column01", Types.VARCHAR },
			{ "column02", Types.VARCHAR },
			{ "column03", Types.VARCHAR },
			{ "column04", Types.VARCHAR },
			{ "column05", Types.VARCHAR },
			{ "column06", Types.VARCHAR },
			{ "column07", Types.VARCHAR },
			{ "column08", Types.VARCHAR },
			{ "column09", Types.VARCHAR },
			{ "column10", Types.VARCHAR },
			{ "column11", Types.VARCHAR },
			{ "column12", Types.VARCHAR },
			{ "column13", Types.VARCHAR },
			{ "column14", Types.VARCHAR },
			{ "column15", Types.VARCHAR },
			{ "column16", Types.VARCHAR },
			{ "column17", Types.VARCHAR },
			{ "column18", Types.VARCHAR },
			{ "column19", Types.VARCHAR },
			{ "column20", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table gfbio_Head (headID LONG not null primary key,name VARCHAR(75) null,task VARCHAR(75) null,column01 VARCHAR(75) null,column02 VARCHAR(75) null,column03 VARCHAR(75) null,column04 VARCHAR(75) null,column05 VARCHAR(75) null,column06 VARCHAR(75) null,column07 VARCHAR(75) null,column08 VARCHAR(75) null,column09 VARCHAR(75) null,column10 VARCHAR(75) null,column11 VARCHAR(75) null,column12 VARCHAR(75) null,column13 VARCHAR(75) null,column14 VARCHAR(75) null,column15 VARCHAR(75) null,column16 VARCHAR(75) null,column17 VARCHAR(75) null,column18 VARCHAR(75) null,column19 VARCHAR(75) null,column20 VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table gfbio_Head";
	public static final String ORDER_BY_JPQL = " ORDER BY head.name ASC";
	public static final String ORDER_BY_SQL = " ORDER BY gfbio_Head.name ASC";
	public static final String DATA_SOURCE = "gfbioDataSource";
	public static final String SESSION_FACTORY = "gfbioSessionFactory";
	public static final String TX_MANAGER = "gfbioTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.gfbio.model.Head"), false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.gfbio.model.Head"), false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.gfbio.model.Head"),
			true);
	public static long COLUMN01_COLUMN_BITMASK = 1L;
	public static long COLUMN02_COLUMN_BITMASK = 2L;
	public static long COLUMN03_COLUMN_BITMASK = 4L;
	public static long COLUMN04_COLUMN_BITMASK = 8L;
	public static long COLUMN05_COLUMN_BITMASK = 16L;
	public static long COLUMN06_COLUMN_BITMASK = 32L;
	public static long COLUMN07_COLUMN_BITMASK = 64L;
	public static long COLUMN08_COLUMN_BITMASK = 128L;
	public static long COLUMN09_COLUMN_BITMASK = 256L;
	public static long COLUMN10_COLUMN_BITMASK = 512L;
	public static long COLUMN11_COLUMN_BITMASK = 1024L;
	public static long COLUMN12_COLUMN_BITMASK = 2048L;
	public static long COLUMN13_COLUMN_BITMASK = 4096L;
	public static long COLUMN14_COLUMN_BITMASK = 8192L;
	public static long COLUMN15_COLUMN_BITMASK = 16384L;
	public static long COLUMN16_COLUMN_BITMASK = 32768L;
	public static long COLUMN17_COLUMN_BITMASK = 65536L;
	public static long COLUMN18_COLUMN_BITMASK = 131072L;
	public static long COLUMN19_COLUMN_BITMASK = 262144L;
	public static long COLUMN20_COLUMN_BITMASK = 524288L;
	public static long HEADID_COLUMN_BITMASK = 1048576L;
	public static long NAME_COLUMN_BITMASK = 2097152L;
	public static long TASK_COLUMN_BITMASK = 4194304L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Head toModel(HeadSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Head model = new HeadImpl();

		model.setHeadID(soapModel.getHeadID());
		model.setName(soapModel.getName());
		model.setTask(soapModel.getTask());
		model.setColumn01(soapModel.getColumn01());
		model.setColumn02(soapModel.getColumn02());
		model.setColumn03(soapModel.getColumn03());
		model.setColumn04(soapModel.getColumn04());
		model.setColumn05(soapModel.getColumn05());
		model.setColumn06(soapModel.getColumn06());
		model.setColumn07(soapModel.getColumn07());
		model.setColumn08(soapModel.getColumn08());
		model.setColumn09(soapModel.getColumn09());
		model.setColumn10(soapModel.getColumn10());
		model.setColumn11(soapModel.getColumn11());
		model.setColumn12(soapModel.getColumn12());
		model.setColumn13(soapModel.getColumn13());
		model.setColumn14(soapModel.getColumn14());
		model.setColumn15(soapModel.getColumn15());
		model.setColumn16(soapModel.getColumn16());
		model.setColumn17(soapModel.getColumn17());
		model.setColumn18(soapModel.getColumn18());
		model.setColumn19(soapModel.getColumn19());
		model.setColumn20(soapModel.getColumn20());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Head> toModels(HeadSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Head> models = new ArrayList<Head>(soapModels.length);

		for (HeadSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.gfbio.model.Head"));

	public HeadModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _headID;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setHeadID(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _headID;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Head.class;
	}

	@Override
	public String getModelClassName() {
		return Head.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("headID", getHeadID());
		attributes.put("name", getName());
		attributes.put("task", getTask());
		attributes.put("column01", getColumn01());
		attributes.put("column02", getColumn02());
		attributes.put("column03", getColumn03());
		attributes.put("column04", getColumn04());
		attributes.put("column05", getColumn05());
		attributes.put("column06", getColumn06());
		attributes.put("column07", getColumn07());
		attributes.put("column08", getColumn08());
		attributes.put("column09", getColumn09());
		attributes.put("column10", getColumn10());
		attributes.put("column11", getColumn11());
		attributes.put("column12", getColumn12());
		attributes.put("column13", getColumn13());
		attributes.put("column14", getColumn14());
		attributes.put("column15", getColumn15());
		attributes.put("column16", getColumn16());
		attributes.put("column17", getColumn17());
		attributes.put("column18", getColumn18());
		attributes.put("column19", getColumn19());
		attributes.put("column20", getColumn20());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long headID = (Long)attributes.get("headID");

		if (headID != null) {
			setHeadID(headID);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String task = (String)attributes.get("task");

		if (task != null) {
			setTask(task);
		}

		String column01 = (String)attributes.get("column01");

		if (column01 != null) {
			setColumn01(column01);
		}

		String column02 = (String)attributes.get("column02");

		if (column02 != null) {
			setColumn02(column02);
		}

		String column03 = (String)attributes.get("column03");

		if (column03 != null) {
			setColumn03(column03);
		}

		String column04 = (String)attributes.get("column04");

		if (column04 != null) {
			setColumn04(column04);
		}

		String column05 = (String)attributes.get("column05");

		if (column05 != null) {
			setColumn05(column05);
		}

		String column06 = (String)attributes.get("column06");

		if (column06 != null) {
			setColumn06(column06);
		}

		String column07 = (String)attributes.get("column07");

		if (column07 != null) {
			setColumn07(column07);
		}

		String column08 = (String)attributes.get("column08");

		if (column08 != null) {
			setColumn08(column08);
		}

		String column09 = (String)attributes.get("column09");

		if (column09 != null) {
			setColumn09(column09);
		}

		String column10 = (String)attributes.get("column10");

		if (column10 != null) {
			setColumn10(column10);
		}

		String column11 = (String)attributes.get("column11");

		if (column11 != null) {
			setColumn11(column11);
		}

		String column12 = (String)attributes.get("column12");

		if (column12 != null) {
			setColumn12(column12);
		}

		String column13 = (String)attributes.get("column13");

		if (column13 != null) {
			setColumn13(column13);
		}

		String column14 = (String)attributes.get("column14");

		if (column14 != null) {
			setColumn14(column14);
		}

		String column15 = (String)attributes.get("column15");

		if (column15 != null) {
			setColumn15(column15);
		}

		String column16 = (String)attributes.get("column16");

		if (column16 != null) {
			setColumn16(column16);
		}

		String column17 = (String)attributes.get("column17");

		if (column17 != null) {
			setColumn17(column17);
		}

		String column18 = (String)attributes.get("column18");

		if (column18 != null) {
			setColumn18(column18);
		}

		String column19 = (String)attributes.get("column19");

		if (column19 != null) {
			setColumn19(column19);
		}

		String column20 = (String)attributes.get("column20");

		if (column20 != null) {
			setColumn20(column20);
		}
	}

	@JSON
	@Override
	public long getHeadID() {
		return _headID;
	}

	@Override
	public void setHeadID(long headID) {
		_columnBitmask |= HEADID_COLUMN_BITMASK;

		if (!_setOriginalHeadID) {
			_setOriginalHeadID = true;

			_originalHeadID = _headID;
		}

		_headID = headID;
	}

	public long getOriginalHeadID() {
		return _originalHeadID;
	}

	@JSON
	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_columnBitmask = -1L;

		if (_originalName == null) {
			_originalName = _name;
		}

		_name = name;
	}

	public String getOriginalName() {
		return GetterUtil.getString(_originalName);
	}

	@JSON
	@Override
	public String getTask() {
		if (_task == null) {
			return StringPool.BLANK;
		}
		else {
			return _task;
		}
	}

	@Override
	public void setTask(String task) {
		_columnBitmask |= TASK_COLUMN_BITMASK;

		if (_originalTask == null) {
			_originalTask = _task;
		}

		_task = task;
	}

	public String getOriginalTask() {
		return GetterUtil.getString(_originalTask);
	}

	@JSON
	@Override
	public String getColumn01() {
		if (_column01 == null) {
			return StringPool.BLANK;
		}
		else {
			return _column01;
		}
	}

	@Override
	public void setColumn01(String column01) {
		_columnBitmask |= COLUMN01_COLUMN_BITMASK;

		if (_originalColumn01 == null) {
			_originalColumn01 = _column01;
		}

		_column01 = column01;
	}

	public String getOriginalColumn01() {
		return GetterUtil.getString(_originalColumn01);
	}

	@JSON
	@Override
	public String getColumn02() {
		if (_column02 == null) {
			return StringPool.BLANK;
		}
		else {
			return _column02;
		}
	}

	@Override
	public void setColumn02(String column02) {
		_columnBitmask |= COLUMN02_COLUMN_BITMASK;

		if (_originalColumn02 == null) {
			_originalColumn02 = _column02;
		}

		_column02 = column02;
	}

	public String getOriginalColumn02() {
		return GetterUtil.getString(_originalColumn02);
	}

	@JSON
	@Override
	public String getColumn03() {
		if (_column03 == null) {
			return StringPool.BLANK;
		}
		else {
			return _column03;
		}
	}

	@Override
	public void setColumn03(String column03) {
		_columnBitmask |= COLUMN03_COLUMN_BITMASK;

		if (_originalColumn03 == null) {
			_originalColumn03 = _column03;
		}

		_column03 = column03;
	}

	public String getOriginalColumn03() {
		return GetterUtil.getString(_originalColumn03);
	}

	@JSON
	@Override
	public String getColumn04() {
		if (_column04 == null) {
			return StringPool.BLANK;
		}
		else {
			return _column04;
		}
	}

	@Override
	public void setColumn04(String column04) {
		_columnBitmask |= COLUMN04_COLUMN_BITMASK;

		if (_originalColumn04 == null) {
			_originalColumn04 = _column04;
		}

		_column04 = column04;
	}

	public String getOriginalColumn04() {
		return GetterUtil.getString(_originalColumn04);
	}

	@JSON
	@Override
	public String getColumn05() {
		if (_column05 == null) {
			return StringPool.BLANK;
		}
		else {
			return _column05;
		}
	}

	@Override
	public void setColumn05(String column05) {
		_columnBitmask |= COLUMN05_COLUMN_BITMASK;

		if (_originalColumn05 == null) {
			_originalColumn05 = _column05;
		}

		_column05 = column05;
	}

	public String getOriginalColumn05() {
		return GetterUtil.getString(_originalColumn05);
	}

	@JSON
	@Override
	public String getColumn06() {
		if (_column06 == null) {
			return StringPool.BLANK;
		}
		else {
			return _column06;
		}
	}

	@Override
	public void setColumn06(String column06) {
		_columnBitmask |= COLUMN06_COLUMN_BITMASK;

		if (_originalColumn06 == null) {
			_originalColumn06 = _column06;
		}

		_column06 = column06;
	}

	public String getOriginalColumn06() {
		return GetterUtil.getString(_originalColumn06);
	}

	@JSON
	@Override
	public String getColumn07() {
		if (_column07 == null) {
			return StringPool.BLANK;
		}
		else {
			return _column07;
		}
	}

	@Override
	public void setColumn07(String column07) {
		_columnBitmask |= COLUMN07_COLUMN_BITMASK;

		if (_originalColumn07 == null) {
			_originalColumn07 = _column07;
		}

		_column07 = column07;
	}

	public String getOriginalColumn07() {
		return GetterUtil.getString(_originalColumn07);
	}

	@JSON
	@Override
	public String getColumn08() {
		if (_column08 == null) {
			return StringPool.BLANK;
		}
		else {
			return _column08;
		}
	}

	@Override
	public void setColumn08(String column08) {
		_columnBitmask |= COLUMN08_COLUMN_BITMASK;

		if (_originalColumn08 == null) {
			_originalColumn08 = _column08;
		}

		_column08 = column08;
	}

	public String getOriginalColumn08() {
		return GetterUtil.getString(_originalColumn08);
	}

	@JSON
	@Override
	public String getColumn09() {
		if (_column09 == null) {
			return StringPool.BLANK;
		}
		else {
			return _column09;
		}
	}

	@Override
	public void setColumn09(String column09) {
		_columnBitmask |= COLUMN09_COLUMN_BITMASK;

		if (_originalColumn09 == null) {
			_originalColumn09 = _column09;
		}

		_column09 = column09;
	}

	public String getOriginalColumn09() {
		return GetterUtil.getString(_originalColumn09);
	}

	@JSON
	@Override
	public String getColumn10() {
		if (_column10 == null) {
			return StringPool.BLANK;
		}
		else {
			return _column10;
		}
	}

	@Override
	public void setColumn10(String column10) {
		_columnBitmask |= COLUMN10_COLUMN_BITMASK;

		if (_originalColumn10 == null) {
			_originalColumn10 = _column10;
		}

		_column10 = column10;
	}

	public String getOriginalColumn10() {
		return GetterUtil.getString(_originalColumn10);
	}

	@JSON
	@Override
	public String getColumn11() {
		if (_column11 == null) {
			return StringPool.BLANK;
		}
		else {
			return _column11;
		}
	}

	@Override
	public void setColumn11(String column11) {
		_columnBitmask |= COLUMN11_COLUMN_BITMASK;

		if (_originalColumn11 == null) {
			_originalColumn11 = _column11;
		}

		_column11 = column11;
	}

	public String getOriginalColumn11() {
		return GetterUtil.getString(_originalColumn11);
	}

	@JSON
	@Override
	public String getColumn12() {
		if (_column12 == null) {
			return StringPool.BLANK;
		}
		else {
			return _column12;
		}
	}

	@Override
	public void setColumn12(String column12) {
		_columnBitmask |= COLUMN12_COLUMN_BITMASK;

		if (_originalColumn12 == null) {
			_originalColumn12 = _column12;
		}

		_column12 = column12;
	}

	public String getOriginalColumn12() {
		return GetterUtil.getString(_originalColumn12);
	}

	@JSON
	@Override
	public String getColumn13() {
		if (_column13 == null) {
			return StringPool.BLANK;
		}
		else {
			return _column13;
		}
	}

	@Override
	public void setColumn13(String column13) {
		_columnBitmask |= COLUMN13_COLUMN_BITMASK;

		if (_originalColumn13 == null) {
			_originalColumn13 = _column13;
		}

		_column13 = column13;
	}

	public String getOriginalColumn13() {
		return GetterUtil.getString(_originalColumn13);
	}

	@JSON
	@Override
	public String getColumn14() {
		if (_column14 == null) {
			return StringPool.BLANK;
		}
		else {
			return _column14;
		}
	}

	@Override
	public void setColumn14(String column14) {
		_columnBitmask |= COLUMN14_COLUMN_BITMASK;

		if (_originalColumn14 == null) {
			_originalColumn14 = _column14;
		}

		_column14 = column14;
	}

	public String getOriginalColumn14() {
		return GetterUtil.getString(_originalColumn14);
	}

	@JSON
	@Override
	public String getColumn15() {
		if (_column15 == null) {
			return StringPool.BLANK;
		}
		else {
			return _column15;
		}
	}

	@Override
	public void setColumn15(String column15) {
		_columnBitmask |= COLUMN15_COLUMN_BITMASK;

		if (_originalColumn15 == null) {
			_originalColumn15 = _column15;
		}

		_column15 = column15;
	}

	public String getOriginalColumn15() {
		return GetterUtil.getString(_originalColumn15);
	}

	@JSON
	@Override
	public String getColumn16() {
		if (_column16 == null) {
			return StringPool.BLANK;
		}
		else {
			return _column16;
		}
	}

	@Override
	public void setColumn16(String column16) {
		_columnBitmask |= COLUMN16_COLUMN_BITMASK;

		if (_originalColumn16 == null) {
			_originalColumn16 = _column16;
		}

		_column16 = column16;
	}

	public String getOriginalColumn16() {
		return GetterUtil.getString(_originalColumn16);
	}

	@JSON
	@Override
	public String getColumn17() {
		if (_column17 == null) {
			return StringPool.BLANK;
		}
		else {
			return _column17;
		}
	}

	@Override
	public void setColumn17(String column17) {
		_columnBitmask |= COLUMN17_COLUMN_BITMASK;

		if (_originalColumn17 == null) {
			_originalColumn17 = _column17;
		}

		_column17 = column17;
	}

	public String getOriginalColumn17() {
		return GetterUtil.getString(_originalColumn17);
	}

	@JSON
	@Override
	public String getColumn18() {
		if (_column18 == null) {
			return StringPool.BLANK;
		}
		else {
			return _column18;
		}
	}

	@Override
	public void setColumn18(String column18) {
		_columnBitmask |= COLUMN18_COLUMN_BITMASK;

		if (_originalColumn18 == null) {
			_originalColumn18 = _column18;
		}

		_column18 = column18;
	}

	public String getOriginalColumn18() {
		return GetterUtil.getString(_originalColumn18);
	}

	@JSON
	@Override
	public String getColumn19() {
		if (_column19 == null) {
			return StringPool.BLANK;
		}
		else {
			return _column19;
		}
	}

	@Override
	public void setColumn19(String column19) {
		_columnBitmask |= COLUMN19_COLUMN_BITMASK;

		if (_originalColumn19 == null) {
			_originalColumn19 = _column19;
		}

		_column19 = column19;
	}

	public String getOriginalColumn19() {
		return GetterUtil.getString(_originalColumn19);
	}

	@JSON
	@Override
	public String getColumn20() {
		if (_column20 == null) {
			return StringPool.BLANK;
		}
		else {
			return _column20;
		}
	}

	@Override
	public void setColumn20(String column20) {
		_columnBitmask |= COLUMN20_COLUMN_BITMASK;

		if (_originalColumn20 == null) {
			_originalColumn20 = _column20;
		}

		_column20 = column20;
	}

	public String getOriginalColumn20() {
		return GetterUtil.getString(_originalColumn20);
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Head.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Head toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Head)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		HeadImpl headImpl = new HeadImpl();

		headImpl.setHeadID(getHeadID());
		headImpl.setName(getName());
		headImpl.setTask(getTask());
		headImpl.setColumn01(getColumn01());
		headImpl.setColumn02(getColumn02());
		headImpl.setColumn03(getColumn03());
		headImpl.setColumn04(getColumn04());
		headImpl.setColumn05(getColumn05());
		headImpl.setColumn06(getColumn06());
		headImpl.setColumn07(getColumn07());
		headImpl.setColumn08(getColumn08());
		headImpl.setColumn09(getColumn09());
		headImpl.setColumn10(getColumn10());
		headImpl.setColumn11(getColumn11());
		headImpl.setColumn12(getColumn12());
		headImpl.setColumn13(getColumn13());
		headImpl.setColumn14(getColumn14());
		headImpl.setColumn15(getColumn15());
		headImpl.setColumn16(getColumn16());
		headImpl.setColumn17(getColumn17());
		headImpl.setColumn18(getColumn18());
		headImpl.setColumn19(getColumn19());
		headImpl.setColumn20(getColumn20());

		headImpl.resetOriginalValues();

		return headImpl;
	}

	@Override
	public int compareTo(Head head) {
		int value = 0;

		value = getName().compareTo(head.getName());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Head)) {
			return false;
		}

		Head head = (Head)obj;

		long primaryKey = head.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		HeadModelImpl headModelImpl = this;

		headModelImpl._originalHeadID = headModelImpl._headID;

		headModelImpl._setOriginalHeadID = false;

		headModelImpl._originalName = headModelImpl._name;

		headModelImpl._originalTask = headModelImpl._task;

		headModelImpl._originalColumn01 = headModelImpl._column01;

		headModelImpl._originalColumn02 = headModelImpl._column02;

		headModelImpl._originalColumn03 = headModelImpl._column03;

		headModelImpl._originalColumn04 = headModelImpl._column04;

		headModelImpl._originalColumn05 = headModelImpl._column05;

		headModelImpl._originalColumn06 = headModelImpl._column06;

		headModelImpl._originalColumn07 = headModelImpl._column07;

		headModelImpl._originalColumn08 = headModelImpl._column08;

		headModelImpl._originalColumn09 = headModelImpl._column09;

		headModelImpl._originalColumn10 = headModelImpl._column10;

		headModelImpl._originalColumn11 = headModelImpl._column11;

		headModelImpl._originalColumn12 = headModelImpl._column12;

		headModelImpl._originalColumn13 = headModelImpl._column13;

		headModelImpl._originalColumn14 = headModelImpl._column14;

		headModelImpl._originalColumn15 = headModelImpl._column15;

		headModelImpl._originalColumn16 = headModelImpl._column16;

		headModelImpl._originalColumn17 = headModelImpl._column17;

		headModelImpl._originalColumn18 = headModelImpl._column18;

		headModelImpl._originalColumn19 = headModelImpl._column19;

		headModelImpl._originalColumn20 = headModelImpl._column20;

		headModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Head> toCacheModel() {
		HeadCacheModel headCacheModel = new HeadCacheModel();

		headCacheModel.headID = getHeadID();

		headCacheModel.name = getName();

		String name = headCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			headCacheModel.name = null;
		}

		headCacheModel.task = getTask();

		String task = headCacheModel.task;

		if ((task != null) && (task.length() == 0)) {
			headCacheModel.task = null;
		}

		headCacheModel.column01 = getColumn01();

		String column01 = headCacheModel.column01;

		if ((column01 != null) && (column01.length() == 0)) {
			headCacheModel.column01 = null;
		}

		headCacheModel.column02 = getColumn02();

		String column02 = headCacheModel.column02;

		if ((column02 != null) && (column02.length() == 0)) {
			headCacheModel.column02 = null;
		}

		headCacheModel.column03 = getColumn03();

		String column03 = headCacheModel.column03;

		if ((column03 != null) && (column03.length() == 0)) {
			headCacheModel.column03 = null;
		}

		headCacheModel.column04 = getColumn04();

		String column04 = headCacheModel.column04;

		if ((column04 != null) && (column04.length() == 0)) {
			headCacheModel.column04 = null;
		}

		headCacheModel.column05 = getColumn05();

		String column05 = headCacheModel.column05;

		if ((column05 != null) && (column05.length() == 0)) {
			headCacheModel.column05 = null;
		}

		headCacheModel.column06 = getColumn06();

		String column06 = headCacheModel.column06;

		if ((column06 != null) && (column06.length() == 0)) {
			headCacheModel.column06 = null;
		}

		headCacheModel.column07 = getColumn07();

		String column07 = headCacheModel.column07;

		if ((column07 != null) && (column07.length() == 0)) {
			headCacheModel.column07 = null;
		}

		headCacheModel.column08 = getColumn08();

		String column08 = headCacheModel.column08;

		if ((column08 != null) && (column08.length() == 0)) {
			headCacheModel.column08 = null;
		}

		headCacheModel.column09 = getColumn09();

		String column09 = headCacheModel.column09;

		if ((column09 != null) && (column09.length() == 0)) {
			headCacheModel.column09 = null;
		}

		headCacheModel.column10 = getColumn10();

		String column10 = headCacheModel.column10;

		if ((column10 != null) && (column10.length() == 0)) {
			headCacheModel.column10 = null;
		}

		headCacheModel.column11 = getColumn11();

		String column11 = headCacheModel.column11;

		if ((column11 != null) && (column11.length() == 0)) {
			headCacheModel.column11 = null;
		}

		headCacheModel.column12 = getColumn12();

		String column12 = headCacheModel.column12;

		if ((column12 != null) && (column12.length() == 0)) {
			headCacheModel.column12 = null;
		}

		headCacheModel.column13 = getColumn13();

		String column13 = headCacheModel.column13;

		if ((column13 != null) && (column13.length() == 0)) {
			headCacheModel.column13 = null;
		}

		headCacheModel.column14 = getColumn14();

		String column14 = headCacheModel.column14;

		if ((column14 != null) && (column14.length() == 0)) {
			headCacheModel.column14 = null;
		}

		headCacheModel.column15 = getColumn15();

		String column15 = headCacheModel.column15;

		if ((column15 != null) && (column15.length() == 0)) {
			headCacheModel.column15 = null;
		}

		headCacheModel.column16 = getColumn16();

		String column16 = headCacheModel.column16;

		if ((column16 != null) && (column16.length() == 0)) {
			headCacheModel.column16 = null;
		}

		headCacheModel.column17 = getColumn17();

		String column17 = headCacheModel.column17;

		if ((column17 != null) && (column17.length() == 0)) {
			headCacheModel.column17 = null;
		}

		headCacheModel.column18 = getColumn18();

		String column18 = headCacheModel.column18;

		if ((column18 != null) && (column18.length() == 0)) {
			headCacheModel.column18 = null;
		}

		headCacheModel.column19 = getColumn19();

		String column19 = headCacheModel.column19;

		if ((column19 != null) && (column19.length() == 0)) {
			headCacheModel.column19 = null;
		}

		headCacheModel.column20 = getColumn20();

		String column20 = headCacheModel.column20;

		if ((column20 != null) && (column20.length() == 0)) {
			headCacheModel.column20 = null;
		}

		return headCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(47);

		sb.append("{headID=");
		sb.append(getHeadID());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", task=");
		sb.append(getTask());
		sb.append(", column01=");
		sb.append(getColumn01());
		sb.append(", column02=");
		sb.append(getColumn02());
		sb.append(", column03=");
		sb.append(getColumn03());
		sb.append(", column04=");
		sb.append(getColumn04());
		sb.append(", column05=");
		sb.append(getColumn05());
		sb.append(", column06=");
		sb.append(getColumn06());
		sb.append(", column07=");
		sb.append(getColumn07());
		sb.append(", column08=");
		sb.append(getColumn08());
		sb.append(", column09=");
		sb.append(getColumn09());
		sb.append(", column10=");
		sb.append(getColumn10());
		sb.append(", column11=");
		sb.append(getColumn11());
		sb.append(", column12=");
		sb.append(getColumn12());
		sb.append(", column13=");
		sb.append(getColumn13());
		sb.append(", column14=");
		sb.append(getColumn14());
		sb.append(", column15=");
		sb.append(getColumn15());
		sb.append(", column16=");
		sb.append(getColumn16());
		sb.append(", column17=");
		sb.append(getColumn17());
		sb.append(", column18=");
		sb.append(getColumn18());
		sb.append(", column19=");
		sb.append(getColumn19());
		sb.append(", column20=");
		sb.append(getColumn20());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(73);

		sb.append("<model><model-name>");
		sb.append("org.gfbio.model.Head");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>headID</column-name><column-value><![CDATA[");
		sb.append(getHeadID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>task</column-name><column-value><![CDATA[");
		sb.append(getTask());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>column01</column-name><column-value><![CDATA[");
		sb.append(getColumn01());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>column02</column-name><column-value><![CDATA[");
		sb.append(getColumn02());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>column03</column-name><column-value><![CDATA[");
		sb.append(getColumn03());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>column04</column-name><column-value><![CDATA[");
		sb.append(getColumn04());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>column05</column-name><column-value><![CDATA[");
		sb.append(getColumn05());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>column06</column-name><column-value><![CDATA[");
		sb.append(getColumn06());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>column07</column-name><column-value><![CDATA[");
		sb.append(getColumn07());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>column08</column-name><column-value><![CDATA[");
		sb.append(getColumn08());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>column09</column-name><column-value><![CDATA[");
		sb.append(getColumn09());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>column10</column-name><column-value><![CDATA[");
		sb.append(getColumn10());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>column11</column-name><column-value><![CDATA[");
		sb.append(getColumn11());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>column12</column-name><column-value><![CDATA[");
		sb.append(getColumn12());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>column13</column-name><column-value><![CDATA[");
		sb.append(getColumn13());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>column14</column-name><column-value><![CDATA[");
		sb.append(getColumn14());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>column15</column-name><column-value><![CDATA[");
		sb.append(getColumn15());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>column16</column-name><column-value><![CDATA[");
		sb.append(getColumn16());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>column17</column-name><column-value><![CDATA[");
		sb.append(getColumn17());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>column18</column-name><column-value><![CDATA[");
		sb.append(getColumn18());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>column19</column-name><column-value><![CDATA[");
		sb.append(getColumn19());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>column20</column-name><column-value><![CDATA[");
		sb.append(getColumn20());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Head.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { Head.class };
	private long _headID;
	private long _originalHeadID;
	private boolean _setOriginalHeadID;
	private String _name;
	private String _originalName;
	private String _task;
	private String _originalTask;
	private String _column01;
	private String _originalColumn01;
	private String _column02;
	private String _originalColumn02;
	private String _column03;
	private String _originalColumn03;
	private String _column04;
	private String _originalColumn04;
	private String _column05;
	private String _originalColumn05;
	private String _column06;
	private String _originalColumn06;
	private String _column07;
	private String _originalColumn07;
	private String _column08;
	private String _originalColumn08;
	private String _column09;
	private String _originalColumn09;
	private String _column10;
	private String _originalColumn10;
	private String _column11;
	private String _originalColumn11;
	private String _column12;
	private String _originalColumn12;
	private String _column13;
	private String _originalColumn13;
	private String _column14;
	private String _originalColumn14;
	private String _column15;
	private String _originalColumn15;
	private String _column16;
	private String _originalColumn16;
	private String _column17;
	private String _originalColumn17;
	private String _column18;
	private String _originalColumn18;
	private String _column19;
	private String _originalColumn19;
	private String _column20;
	private String _originalColumn20;
	private long _columnBitmask;
	private Head _escapedModel;
}