/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.gfbio.model;

import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import org.gfbio.service.persistence.Cell_HeadPK;

import java.io.Serializable;

/**
 * The base model interface for the Cell_Head service. Represents a row in the &quot;gfbio_Cell_Head&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link org.gfbio.model.impl.Cell_HeadModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link org.gfbio.model.impl.Cell_HeadImpl}.
 * </p>
 *
 * @author Marcel Froemming
 * @see Cell_Head
 * @see org.gfbio.model.impl.Cell_HeadImpl
 * @see org.gfbio.model.impl.Cell_HeadModelImpl
 * @generated
 */
public interface Cell_HeadModel extends BaseModel<Cell_Head> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a cell_ head model instance should use the {@link Cell_Head} interface instead.
	 */

	/**
	 * Returns the primary key of this cell_ head.
	 *
	 * @return the primary key of this cell_ head
	 */
	public Cell_HeadPK getPrimaryKey();

	/**
	 * Sets the primary key of this cell_ head.
	 *
	 * @param primaryKey the primary key of this cell_ head
	 */
	public void setPrimaryKey(Cell_HeadPK primaryKey);

	/**
	 * Returns the cell i d of this cell_ head.
	 *
	 * @return the cell i d of this cell_ head
	 */
	public long getCellID();

	/**
	 * Sets the cell i d of this cell_ head.
	 *
	 * @param cellID the cell i d of this cell_ head
	 */
	public void setCellID(long cellID);

	/**
	 * Returns the head i d of this cell_ head.
	 *
	 * @return the head i d of this cell_ head
	 */
	public long getHeadID();

	/**
	 * Sets the head i d of this cell_ head.
	 *
	 * @param headID the head i d of this cell_ head
	 */
	public void setHeadID(long headID);

	/**
	 * Returns the column of this cell_ head.
	 *
	 * @return the column of this cell_ head
	 */
	public int getColumn();

	/**
	 * Sets the column of this cell_ head.
	 *
	 * @param column the column of this cell_ head
	 */
	public void setColumn(int column);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(Cell_Head cell_Head);

	@Override
	public int hashCode();

	@Override
	public CacheModel<Cell_Head> toCacheModel();

	@Override
	public Cell_Head toEscapedModel();

	@Override
	public Cell_Head toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}