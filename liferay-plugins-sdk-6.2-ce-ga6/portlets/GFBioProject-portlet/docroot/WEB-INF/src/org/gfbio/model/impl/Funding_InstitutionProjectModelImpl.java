/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.gfbio.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import org.gfbio.model.Funding_InstitutionProject;
import org.gfbio.model.Funding_InstitutionProjectModel;
import org.gfbio.model.Funding_InstitutionProjectSoap;

import org.gfbio.service.persistence.Funding_InstitutionProjectPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Funding_InstitutionProject service. Represents a row in the &quot;gfbio_Funding_InstitutionProject&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.gfbio.model.Funding_InstitutionProjectModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link Funding_InstitutionProjectImpl}.
 * </p>
 *
 * @author Marcel Froemming
 * @see Funding_InstitutionProjectImpl
 * @see org.gfbio.model.Funding_InstitutionProject
 * @see org.gfbio.model.Funding_InstitutionProjectModel
 * @generated
 */
@JSON(strict = true)
public class Funding_InstitutionProjectModelImpl extends BaseModelImpl<Funding_InstitutionProject>
	implements Funding_InstitutionProjectModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a funding_ institution project model instance should use the {@link org.gfbio.model.Funding_InstitutionProject} interface instead.
	 */
	public static final String TABLE_NAME = "gfbio_Funding_InstitutionProject";
	public static final Object[][] TABLE_COLUMNS = {
			{ "projectID", Types.BIGINT },
			{ "fundingAgencyID", Types.BIGINT },
			{ "fundingProgramID", Types.BIGINT },
			{ "institutionID", Types.BIGINT },
			{ "lastmodifieddate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table gfbio_Funding_InstitutionProject (projectID LONG not null,fundingAgencyID LONG not null,fundingProgramID LONG not null,institutionID LONG not null,lastmodifieddate DATE null,primary key (projectID, fundingAgencyID, fundingProgramID, institutionID))";
	public static final String TABLE_SQL_DROP = "drop table gfbio_Funding_InstitutionProject";
	public static final String ORDER_BY_JPQL = " ORDER BY funding_InstitutionProject.id.projectID ASC, funding_InstitutionProject.id.fundingAgencyID ASC, funding_InstitutionProject.id.fundingProgramID ASC, funding_InstitutionProject.id.institutionID ASC";
	public static final String ORDER_BY_SQL = " ORDER BY gfbio_Funding_InstitutionProject.projectID ASC, gfbio_Funding_InstitutionProject.fundingAgencyID ASC, gfbio_Funding_InstitutionProject.fundingProgramID ASC, gfbio_Funding_InstitutionProject.institutionID ASC";
	public static final String DATA_SOURCE = "gfbioDataSource";
	public static final String SESSION_FACTORY = "gfbioSessionFactory";
	public static final String TX_MANAGER = "gfbioTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.gfbio.model.Funding_InstitutionProject"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.gfbio.model.Funding_InstitutionProject"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.gfbio.model.Funding_InstitutionProject"),
			true);
	public static long FUNDINGAGENCYID_COLUMN_BITMASK = 1L;
	public static long INSTITUTIONID_COLUMN_BITMASK = 2L;
	public static long PROJECTID_COLUMN_BITMASK = 4L;
	public static long FUNDINGPROGRAMID_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Funding_InstitutionProject toModel(
		Funding_InstitutionProjectSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Funding_InstitutionProject model = new Funding_InstitutionProjectImpl();

		model.setProjectID(soapModel.getProjectID());
		model.setFundingAgencyID(soapModel.getFundingAgencyID());
		model.setFundingProgramID(soapModel.getFundingProgramID());
		model.setInstitutionID(soapModel.getInstitutionID());
		model.setLastModifiedDate(soapModel.getLastModifiedDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Funding_InstitutionProject> toModels(
		Funding_InstitutionProjectSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Funding_InstitutionProject> models = new ArrayList<Funding_InstitutionProject>(soapModels.length);

		for (Funding_InstitutionProjectSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.gfbio.model.Funding_InstitutionProject"));

	public Funding_InstitutionProjectModelImpl() {
	}

	@Override
	public Funding_InstitutionProjectPK getPrimaryKey() {
		return new Funding_InstitutionProjectPK(_projectID, _fundingAgencyID,
			_fundingProgramID, _institutionID);
	}

	@Override
	public void setPrimaryKey(Funding_InstitutionProjectPK primaryKey) {
		setProjectID(primaryKey.projectID);
		setFundingAgencyID(primaryKey.fundingAgencyID);
		setFundingProgramID(primaryKey.fundingProgramID);
		setInstitutionID(primaryKey.institutionID);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new Funding_InstitutionProjectPK(_projectID, _fundingAgencyID,
			_fundingProgramID, _institutionID);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((Funding_InstitutionProjectPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return Funding_InstitutionProject.class;
	}

	@Override
	public String getModelClassName() {
		return Funding_InstitutionProject.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("projectID", getProjectID());
		attributes.put("fundingAgencyID", getFundingAgencyID());
		attributes.put("fundingProgramID", getFundingProgramID());
		attributes.put("institutionID", getInstitutionID());
		attributes.put("lastModifiedDate", getLastModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long projectID = (Long)attributes.get("projectID");

		if (projectID != null) {
			setProjectID(projectID);
		}

		Long fundingAgencyID = (Long)attributes.get("fundingAgencyID");

		if (fundingAgencyID != null) {
			setFundingAgencyID(fundingAgencyID);
		}

		Long fundingProgramID = (Long)attributes.get("fundingProgramID");

		if (fundingProgramID != null) {
			setFundingProgramID(fundingProgramID);
		}

		Long institutionID = (Long)attributes.get("institutionID");

		if (institutionID != null) {
			setInstitutionID(institutionID);
		}

		Date lastModifiedDate = (Date)attributes.get("lastModifiedDate");

		if (lastModifiedDate != null) {
			setLastModifiedDate(lastModifiedDate);
		}
	}

	@JSON
	@Override
	public long getProjectID() {
		return _projectID;
	}

	@Override
	public void setProjectID(long projectID) {
		_columnBitmask |= PROJECTID_COLUMN_BITMASK;

		if (!_setOriginalProjectID) {
			_setOriginalProjectID = true;

			_originalProjectID = _projectID;
		}

		_projectID = projectID;
	}

	public long getOriginalProjectID() {
		return _originalProjectID;
	}

	@JSON
	@Override
	public long getFundingAgencyID() {
		return _fundingAgencyID;
	}

	@Override
	public void setFundingAgencyID(long fundingAgencyID) {
		_columnBitmask |= FUNDINGAGENCYID_COLUMN_BITMASK;

		if (!_setOriginalFundingAgencyID) {
			_setOriginalFundingAgencyID = true;

			_originalFundingAgencyID = _fundingAgencyID;
		}

		_fundingAgencyID = fundingAgencyID;
	}

	public long getOriginalFundingAgencyID() {
		return _originalFundingAgencyID;
	}

	@JSON
	@Override
	public long getFundingProgramID() {
		return _fundingProgramID;
	}

	@Override
	public void setFundingProgramID(long fundingProgramID) {
		_fundingProgramID = fundingProgramID;
	}

	@JSON
	@Override
	public long getInstitutionID() {
		return _institutionID;
	}

	@Override
	public void setInstitutionID(long institutionID) {
		_columnBitmask |= INSTITUTIONID_COLUMN_BITMASK;

		if (!_setOriginalInstitutionID) {
			_setOriginalInstitutionID = true;

			_originalInstitutionID = _institutionID;
		}

		_institutionID = institutionID;
	}

	public long getOriginalInstitutionID() {
		return _originalInstitutionID;
	}

	@JSON
	@Override
	public Date getLastModifiedDate() {
		return _lastModifiedDate;
	}

	@Override
	public void setLastModifiedDate(Date lastModifiedDate) {
		_lastModifiedDate = lastModifiedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public Funding_InstitutionProject toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Funding_InstitutionProject)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		Funding_InstitutionProjectImpl funding_InstitutionProjectImpl = new Funding_InstitutionProjectImpl();

		funding_InstitutionProjectImpl.setProjectID(getProjectID());
		funding_InstitutionProjectImpl.setFundingAgencyID(getFundingAgencyID());
		funding_InstitutionProjectImpl.setFundingProgramID(getFundingProgramID());
		funding_InstitutionProjectImpl.setInstitutionID(getInstitutionID());
		funding_InstitutionProjectImpl.setLastModifiedDate(getLastModifiedDate());

		funding_InstitutionProjectImpl.resetOriginalValues();

		return funding_InstitutionProjectImpl;
	}

	@Override
	public int compareTo(Funding_InstitutionProject funding_InstitutionProject) {
		Funding_InstitutionProjectPK primaryKey = funding_InstitutionProject.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Funding_InstitutionProject)) {
			return false;
		}

		Funding_InstitutionProject funding_InstitutionProject = (Funding_InstitutionProject)obj;

		Funding_InstitutionProjectPK primaryKey = funding_InstitutionProject.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
		Funding_InstitutionProjectModelImpl funding_InstitutionProjectModelImpl = this;

		funding_InstitutionProjectModelImpl._originalProjectID = funding_InstitutionProjectModelImpl._projectID;

		funding_InstitutionProjectModelImpl._setOriginalProjectID = false;

		funding_InstitutionProjectModelImpl._originalFundingAgencyID = funding_InstitutionProjectModelImpl._fundingAgencyID;

		funding_InstitutionProjectModelImpl._setOriginalFundingAgencyID = false;

		funding_InstitutionProjectModelImpl._originalInstitutionID = funding_InstitutionProjectModelImpl._institutionID;

		funding_InstitutionProjectModelImpl._setOriginalInstitutionID = false;

		funding_InstitutionProjectModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Funding_InstitutionProject> toCacheModel() {
		Funding_InstitutionProjectCacheModel funding_InstitutionProjectCacheModel =
			new Funding_InstitutionProjectCacheModel();

		funding_InstitutionProjectCacheModel.projectID = getProjectID();

		funding_InstitutionProjectCacheModel.fundingAgencyID = getFundingAgencyID();

		funding_InstitutionProjectCacheModel.fundingProgramID = getFundingProgramID();

		funding_InstitutionProjectCacheModel.institutionID = getInstitutionID();

		Date lastModifiedDate = getLastModifiedDate();

		if (lastModifiedDate != null) {
			funding_InstitutionProjectCacheModel.lastModifiedDate = lastModifiedDate.getTime();
		}
		else {
			funding_InstitutionProjectCacheModel.lastModifiedDate = Long.MIN_VALUE;
		}

		return funding_InstitutionProjectCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{projectID=");
		sb.append(getProjectID());
		sb.append(", fundingAgencyID=");
		sb.append(getFundingAgencyID());
		sb.append(", fundingProgramID=");
		sb.append(getFundingProgramID());
		sb.append(", institutionID=");
		sb.append(getInstitutionID());
		sb.append(", lastModifiedDate=");
		sb.append(getLastModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("org.gfbio.model.Funding_InstitutionProject");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>projectID</column-name><column-value><![CDATA[");
		sb.append(getProjectID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fundingAgencyID</column-name><column-value><![CDATA[");
		sb.append(getFundingAgencyID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fundingProgramID</column-name><column-value><![CDATA[");
		sb.append(getFundingProgramID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>institutionID</column-name><column-value><![CDATA[");
		sb.append(getInstitutionID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lastModifiedDate</column-name><column-value><![CDATA[");
		sb.append(getLastModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Funding_InstitutionProject.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Funding_InstitutionProject.class
		};
	private long _projectID;
	private long _originalProjectID;
	private boolean _setOriginalProjectID;
	private long _fundingAgencyID;
	private long _originalFundingAgencyID;
	private boolean _setOriginalFundingAgencyID;
	private long _fundingProgramID;
	private long _institutionID;
	private long _originalInstitutionID;
	private boolean _setOriginalInstitutionID;
	private Date _lastModifiedDate;
	private long _columnBitmask;
	private Funding_InstitutionProject _escapedModel;
}